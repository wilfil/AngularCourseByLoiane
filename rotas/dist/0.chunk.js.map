{"version":3,"sources":["webpack:////home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/aluno-detalhe/aluno-detalhe.component.css","webpack:////home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/aluno-detalhe/aluno-detalhe.component.html","webpack:////home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/aluno-detalhe/aluno-detalhe.component.ts","webpack:////home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/aluno-form/aluno-form.component.css","webpack:////home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/aluno-form/aluno-form.component.html","webpack:////home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/aluno-form/aluno-form.component.ts","webpack:////home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/alunos.component.css","webpack:////home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/alunos.component.html","webpack:////home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/alunos.component.ts","webpack:////home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/alunos.module.ts","webpack:////home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/alunos.routing.module.ts","webpack:////home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/alunos.service.ts","webpack:////home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/guards/aluno-detalhe.resolver.ts","webpack:////home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/guards/alunos-deactivate.guard.ts"],"names":[],"mappings":"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","file":"0.chunk.js","sourcesContent":["exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/aluno-detalhe/aluno-detalhe.component.css\n// module id = ../../../../../src/app/alunos/aluno-detalhe/aluno-detalhe.component.css\n// module chunks = 0","module.exports = \"<h4> Detalhes do aluno: </h4>\\n\\n\\n\\n<p>Nome do Aluno:{{ aluno.nome }} </p>\\n<p>Id do Aluno: {{ aluno.id }}</p>\\n<p>Email do Aluno:{{ aluno.email }} </p>\\n\\n<br>\\n\\n<button class=\\\"waves-effect waves-light btn green\\\" (click)=editarAluno()>Editar</button>\\n\\n\\n\\n<!-- Logo abaixo vamos colocar as informacoes em um formulario -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/aluno-detalhe/aluno-detalhe.component.html\n// module id = ../../../../../src/app/alunos/aluno-detalhe/aluno-detalhe.component.html\n// module chunks = 0","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs/Rx\";\n\nimport { AlunosService } from \"app/alunos/alunos.service\";\nimport { Aluno } from \"app/alunos/aluno\";\n\n@Component({\n  selector: 'app-aluno-detalhe',\n  templateUrl: './aluno-detalhe.component.html',\n  styleUrls: ['./aluno-detalhe.component.css']\n})\nexport class AlunoDetalheComponent implements OnInit, OnDestroy {\n\n  private inscricao: Subscription;\n\n  //idAluno: number;\n  aluno: Aluno;\n\n\n  constructor(\n    private _activatedRoute: ActivatedRoute, //i ActivatedRoute serve para pegar os dados da rota ativa\n    private _router: Router, // o router serve para usar o navigate\n    //com o activated route, eu me inscrevo nos parâmetros da rota e obtenho o que quiser\n    private _alunosService: AlunosService\n  ) { }\n\n\n  editarAluno() {\n    //let aluno = this.aluno;\n    this._router.navigate(['/alunos', this.aluno.id, 'edit']);\n  }\n\n\n  ngOnInit() {\n    //inscrição no activated route para obter o id, que é o que a rota contém\n    // não consigo pegar coisas além do id, q está na rota\n\n    //console.log(this._activatedRoute);\n\n  /* Esse código abaixo foi jogado pra dentro do resolver\n    this.inscricao = this._activatedRoute.params.subscribe(\n      (valor) => {\n        let idAluno = valor['id'];\n        this.aluno = this._alunosService.getAluno(idAluno);\n      }\n    ); */\n\n    // E agora eu chamo o resolver...\n\n    console.log('O NgOnInit do Aluno-detalhe.component.ts está sendo executado!');\n  \n    this.inscricao = this._activatedRoute.data.subscribe(\n      (informacao: { aluno: Aluno }) => { \n        \n        console.log('Recebendo o Objeto Aluno do Resolver!'); \n      // observemos que informacao retorna um objeto do tipo aluno, então..\n      this.aluno = informacao.aluno; \n      // IMPORTANTE: Esse segundo informacao.aluno, é exatamente o retorno do resolver \n      // quando a guarda de rotas for chamada em alunos.routing.module\n      // resolve: { aluno: AlunoDetalheResolver } -> linha 34 do arquivo de rotas\n      }\n    );\n    \n\n\n  }\n\n  ngOnDestroy() {\n    //desinscrição no activated route\n    this.inscricao.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/aluno-detalhe/aluno-detalhe.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/aluno-form/aluno-form.component.css\n// module id = ../../../../../src/app/alunos/aluno-form/aluno-form.component.css\n// module chunks = 0","module.exports = \"<div class=\\\"row\\\">\\n    <h4>Criar/Editar Cadastro</h4>\\n    <div class=\\\"col s6\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field col s6\\\">\\n                <input disabled placeholder=\\\"#\\\" id=\\\"idAluno\\\" type=\\\"text\\\" class=\\\"validate\\\" [(ngModel)]=\\\"aluno.id\\\">\\n                <label for=\\\"idAluno\\\" class=\\\"active\\\">Id do Aluno</label>\\n            </div>\\n\\n        </div>\\n        <!-- o angular tem suporte a form pra verificar se ele mudou, mas no momento vamos fazer manualmente -->\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field col s6\\\">\\n                <input id=\\\"nome\\\" type=\\\"text\\\" class=\\\"validate\\\" [(ngModel)]=\\\"aluno.nome\\\" (input)=\\\"onInput()\\\">\\n                <label for=\\\"nome\\\" class=\\\"active\\\">Nome</label>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field col s6\\\">\\n                <input id=\\\"email\\\" type=\\\"email\\\" class=\\\"validate\\\" [(ngModel)]=\\\"aluno.email\\\">\\n                <label for=\\\"email\\\" class=\\\"active\\\">Email</label>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/aluno-form/aluno-form.component.html\n// module id = ../../../../../src/app/alunos/aluno-form/aluno-form.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from \"rxjs/Rx\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { AlunosService } from \"app/alunos/alunos.service\";\nimport { IFormCanDeactivate } from \"app/guards/iform-candeactivate\";\n\n@Component({\n  selector: 'app-aluno-form',\n  templateUrl: './aluno-form.component.html',\n  styleUrls: ['./aluno-form.component.css']\n})\nexport class AlunoFormComponent implements OnInit, IFormCanDeactivate {\n\n  private inscricao: Subscription;\n\n  //idAluno: number;\n  aluno;\n\n  private formMudou: boolean = false;\n\n\n  constructor(\n    private _activatedRoute: ActivatedRoute, //i ActivatedRoute serve para pegar os dados da rota ativa\n    private _router: Router, // o router serve para usar o navigate\n    //com o activated route, eu me inscrevo nos parâmetros da rota e obtenho o que quiser\n    private alunosService: AlunosService\n  ) { }\n\n\n\n  ngOnInit() {\n    //inscrição no activated route para obter o id, que é o que a rota contém\n    // não consigo pegar coisas além do id, q está na rota\n\n    //console.log(this._activatedRoute);\n\n    this.inscricao = this._activatedRoute.params.subscribe(\n      (valor) => {\n        let idAluno = valor['id'];\n        this.aluno = this.alunosService.getAluno(idAluno);\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    //desinscrição no activated route\n    this.inscricao.unsubscribe();\n  }\n\n  onInput(){\n    this.formMudou = true;\n    console.log('mudou');\n\n  }\n\n  podeDesativar(){\n    if (this.formMudou) {\n      return confirm('Tem certeza que deseja sair dessa página?');\n      //se o usuário clicar em OK, retorna TRUE; caso contrário retorna FALSE\n\n    }\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/aluno-form/aluno-form.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/alunos.component.css\n// module id = ../../../../../src/app/alunos/alunos.component.css\n// module chunks = 0","module.exports = \"<div class=\\\"row\\\">\\n    <!-- aqui começa o grid -->\\n    <div class=\\\"col s5\\\">\\n        <ul class=\\\"collection with-header\\\">\\n            <li class=\\\"collection-header\\\">\\n                <h4>Lista de Alunos</h4>\\n            </li>\\n            <li class=\\\"collection-item\\\" *ngFor=\\\"let aluno of alunos\\\" [routerLink]=\\\"[aluno.id]\\\">\\n                <div>{{aluno.nome}}<a [routerLink]=\\\"[aluno.id]\\\" class=\\\"secondary-content \\\"><i class=\\\"material-icons \\\">send</i></a></div>\\n            </li>\\n\\n            <!-- no caso do routerlink acima, coloquei link tanto no li como no ícone :) -->\\n            <!-- [routerLink]=\\\"['/alunos',aluno.id] como já estou dentro de alunos e estou usando rotas filhores, não\\n            preciso colocar o caminho completo -->\\n\\n        </ul>\\n    </div>\\n    <!--\\n    <div class=\\\"col s1\\\">\\n\\n    </div>\\n\\n-->\\n\\n    <div class=\\\"row s6\\\">\\n        <router-outlet></router-outlet>\\n    </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/alunos.component.html\n// module id = ../../../../../src/app/alunos/alunos.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\n\nimport { AlunosService } from \"app/alunos/alunos.service\";\n\n@Component({\n  selector: 'app-alunos',\n  templateUrl: './alunos.component.html',\n  styleUrls: ['./alunos.component.css']\n})\nexport class AlunosComponent implements OnInit {\n\n  private alunos: any[] = [];\n\n  constructor(private _alunosService: AlunosService) { }\n\n  ngOnInit() {\n    this.alunos = this._alunosService.getAlunos();\n    // console.log(this.alunos);\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/alunos.component.ts","import { AlunosDeactivateGuard } from './../guards/alunos-deactivate.guard';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\nimport { AlunosComponent } from \"app/alunos/alunos.component\";\r\nimport { AlunoFormComponent } from './aluno-form/aluno-form.component';\r\nimport { AlunoDetalheComponent } from './aluno-detalhe/aluno-detalhe.component';\r\nimport { AlunosRoutingModule } from \"app/alunos/alunos.routing.module\";\r\nimport { AlunosService } from \"app/alunos/alunos.service\";\r\nimport { AlunoDetalheResolver } from \"app/alunos/guards/aluno-detalhe.resolver\";\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AlunosComponent,\r\n        AlunoFormComponent,\r\n        AlunoDetalheComponent\r\n    ],\r\n    imports: [ \r\n        CommonModule,\r\n        FormsModule,\r\n        AlunosRoutingModule\r\n    ],\r\n    exports: [ ],\r\n    providers: [\r\n                AlunosService , \r\n                AlunosDeactivateGuard,\r\n                AlunoDetalheResolver\r\n                ]\r\n})\r\nexport class AlunosModule {}\n\n\n// WEBPACK FOOTER //\n// /home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/alunos.module.ts","\r\nimport { AlunosGuard } from './../guards/alunos.guard';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { AlunosComponent } from \"app/alunos/alunos.component\";\r\nimport { AlunoDetalheComponent } from \"app/alunos/aluno-detalhe/aluno-detalhe.component\";\r\nimport { AlunoFormComponent } from \"app/alunos/aluno-form/aluno-form.component\";\r\nimport { AlunosDeactivateGuard } from \"app/guards/alunos-deactivate.guard\";\r\nimport { AlunoDetalheResolver } from \"app/alunos/guards/aluno-detalhe.resolver\";\r\n\r\n/* Observemos que nesse caso ele roteia de um componente de Alunos pra Outros componentes\r\nconst alunosRoutes: Routes = [\r\n    {  path: 'alunos', component: AlunosComponent },\r\n    {  path: 'alunos/novo', component: AlunoFormComponent },\r\n    {  path: 'alunos/:id', component: AlunoDetalheComponent },\r\n    {  path: 'alunos/:id/edit', component: AlunoFormComponent }\r\n]; \r\n*/\r\n\r\n// Utilizando rotas filhas, renderizo a rota pai e a filha. Ou seja: Alunos, e o outro componente!\r\n// Declarar da maneira de cima ou de baixo, depende da necessidade do projeto\r\nconst alunosRoutes: Routes = [ \r\n    {  path: '', component: AlunosComponent, \r\n    \r\n        canActivateChild: [AlunosGuard], // se eu colocar o guarda aqui, ele chama na hora de acionar um filhote\r\n        \r\n        children: [  // aqui eu informo que ele tem filhos\r\n       //deixei vazio acima por conta do lazy loading. Se fosse normal, preencheria com alunos\r\n       \r\n        {  path: 'novo', component: AlunoFormComponent },\r\n        {  path: ':id', component: AlunoDetalheComponent,\r\n            resolve: { aluno: AlunoDetalheResolver }    // adicionado após implementar o guarda resolver. \"aluno\" poderia ter qualquer nome\r\n        },\r\n        {  path: ':id/edit', component: AlunoFormComponent, canDeactivate: [AlunosDeactivateGuard] }\r\n    ]}\r\n];  // observermos que nas rotas filhas não preciso colocar alunos/novo\r\n\r\n\r\n// export const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [ RouterModule.forChild(alunosRoutes) ],\r\n    exports: [ RouterModule ]\r\n})\r\n\r\nexport class AlunosRoutingModule {}\n\n\n// WEBPACK FOOTER //\n// /home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/alunos.routing.module.ts","import { Injectable } from '@angular/core';\nimport { Aluno } from \"app/alunos/aluno\";\n\n@Injectable()\nexport class AlunosService {\n  \n  private alunos: Aluno[] = [ // a variável aluno agora é um array de objetos tipo Aluno\n    {id:1, nome:'Aluno 01', email: 'aluno01@email.com'},\n    {id:2, nome:'Aluno 02', email: 'aluno02@email.com'},\n    {id:3, nome:'Aluno 03', email: 'aluno03@email.com'}\n  ];\n  \n  getAlunos(){\n    return this.alunos;     \n  }\n\n  getAluno(idAluno) {\n    // Trata-se de um array de objeto a ser varrido por um for; Se usar o filter, retorna um object\n    for (var index = 0; index < this.alunos.length; index++) {\n      if( this.alunos[index].id == idAluno ) {\n        console.log(this.alunos[index]);\n        return this.alunos[index];\n      }      \n    }\n    \n    return null;\n  }\n\n\n\n  constructor() { }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/alunos.service.ts","// Essa guarda server para garantir que a consulta ajax ao servidor irá finalizar antes\r\n// que o componente aluno detalhe seja renderizado, ou seja, que o serviço irá concluir seu papel\r\n \r\n\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from \"@angular/router\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Rx\";\r\n\r\nimport { Aluno } from \"app/alunos/aluno\";\r\nimport { AlunosService } from \"app/alunos/alunos.service\";\r\n\r\n@Injectable() // NÃO ESQUECER DE COLOCAR NO PROVIDER\r\n\r\nexport class AlunoDetalheResolver implements Resolve<Aluno> { \r\n    // Team é o tipo do objeto que será resolvido\r\n    // Devo observar que preciso resolver um objeto do tipo Aluno. Ele que será consultado do server\r\n\r\n\r\n// no construtor, irei usar o serviço alunosService. Preciso aplicar esse guarda enquanto o \r\n// serviço termina seu papel\r\n\r\n    constructor(private _alunosService: AlunosService) {}\r\n\r\n    resolve(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot\r\n        ): Observable<any>|Promise<any>|any {\r\n    \r\n            // Aqui eu trago a lógica do NgOnInit do aluno-detalhe.component.ts para que o resolver\r\n            // carregue o objeto\r\n            let idAluno = route.params['id'];\r\n\r\n\r\n            console.log('Estou executando o resolver!');\r\n            // estou pegando o id do aluno pela rota ativa, passando pro serviço carregar o aluno\r\n            return this._alunosService.getAluno(idAluno);\r\n            \r\n            // depois disso, passo o resolve pra rota ':id'. Ou seja, quando o usuário clicar em um aluno\r\n            // ele chama o guarda de rotas para carregar o aluno\r\n\r\n            // Dúvida: e o serviço não faz mais o serviço de carregar o aluno?  NÃO!!!!\r\n            // DEVO REMOVER O CODIGO DO NGONINIT        \r\n    }\r\n}\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// /home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/alunos/guards/aluno-detalhe.resolver.ts","\nimport { AlunoFormComponent } from 'app/alunos/aluno-form/aluno-form.component';\n\nimport { Observable } from 'rxjs';\nimport { Component } from '@angular/core';\n\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot } from \"@angular/router\";\n\nimport { IFormCanDeactivate } from \"app/guards/iform-candeactivate\";\n\nexport class AlunosDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n\n    // Será implementado um guarda de desativação de rotas, para o AlunoFormComponent\n    // bastante útil para forms\n\n    canDeactivate(\n        component: IFormCanDeactivate, // passo para o candeactivate o form! \n        currentRoute: ActivatedRouteSnapshot, \n        currentState: RouterStateSnapshot \n       // nextState?: RouterStateSnapshot\n        ): \n        boolean | Observable<boolean> | Promise<boolean> {\n          //  console.log(\"Estou verificando rota de desativação!\");\n           \n         //  console.log(component.podeMudarRota());\n           return component.podeDesativar();\n\n\n        // ao invés de chamar um atributo, posso chamar uma função\n        //  return !component.formMudou; \n        // throw new Error(\"Method not implemented.\");\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/wilson/projects/LoianeCourse-Angular2/rotas/src/app/guards/alunos-deactivate.guard.ts"],"sourceRoot":""}